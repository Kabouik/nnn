#!/usr/bin/env sh

# Description: Add selection or hovered file/directory to cmus queue.
# If adding selection, files/dirs are added in the same order they were selected in nnn.
# cmus will be started in a new window if not already running and playback will start immediately.
# If cmus is already running, files will just be appended to the queue (no forced playback).
#
# Todo: Add cava as optional dependency
#
# Dependencies: cmus, pgrep, xdotool (optional)
# Shell: POSIX compliant
# Author: Kabouik

# (Optional) Set preferred terminal emulator for cmus if not set in your env,
# or leave commented out to use OS default
#TERMINAL="kitty"

# Required variables
selection=${NNN_SEL:-${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.selection}
REPLY=c

start_cmus() {
    if [ -x "$(command -v xdotool)" ]; then
        nnnwindow="$(xdotool getactivewindow)"
    fi
    printf "cmus is not running, starting it in a new %s window.\n" "$TERMINAL"
    (case "$TERMINAL" in
        kitty | gnome-terminal | st)
            nohup "$TERMINAL" -- cmus >/dev/null 2>&1 &
            ;;
        havoc)
            nohup "$TERMINAL" cmus >/dev/null 2>&1 &
            ;;
        "")
            nohup x-terminal-emulator -e cmus >/dev/null 2>&1 &
            ;;
        *)
            nohup "$TERMINAL" -e cmus >/dev/null 2>&1 &
            ;;
    esac)
    until [ -n "$cmuspid" ]; do # Give the new terminal some time to open
        cmuspid="$(pgrep cmus)"; sleep 0.20
    done
    if [ -x "$(command -v xdotool)" ]; then
        xdotool windowactivate "$nnnwindow"
    fi
}

# If active selection,then  ask what to do
if [ -s "$selection" ]; then
    printf "Queue [s]election or [c]urrently hovered? [default=c]: "
    read -r REPLY
fi

# If [s]election, then start cmus in new window (if necessary) and append selection to queue
if [ "$REPLY" = "s" ]; then
    if ! pgrep cmus >/dev/null; then
        start_cmus
        printf "Appending files to cmus queue\n"
        # Queue, change view and play
        cmus-remote -C "view 4"; xargs < "$selection" -0 cmus-remote -q; cmus-remote -p; unset cmuspid
    else
        # Queue in existing cmus if already running and change view
        printf "Appending files to current cmus queue\n"
        cmus-remote -C "view 4"; xargs < "$selection" -0 cmus-remote -q
    fi
    # Clear selection
    if [ -p "$NNN_PIPE" ]; then
        printf "-" > "$NNN_PIPE"
    fi

# If [c]urrent, then start cmus in new window (if necessary) and append hovered file or directory to queue
elif [ -n "$1" ]; then
    if ! pgrep cmus >/dev/null; then
        start_cmus
        printf "Appending '%s' to cmus queue\n" "$1"
        # Queue, change view and play
        cmus-remote -C "view 4"; cmus-remote -q "$1"; cmus-remote -p; unset cmuspid
    else
        # Queue in existing cmus if already running and change view
        printf "Appending '%s' to current cmus queue\n" "$1"
        cmus-remote -C "view 4"; cmus-remote -q "$1"
    fi
fi
